---
layout: post
title:      "Off the rails and into React/Redux"
date:       2019-01-17 17:59:13 -0500
permalink:  off_the_rails_and_into_react_redux
---


For the Final project in the Flatiron school curriculum, I was tasked with building an application that utilized a React and Redux front end while working with a Rails API on the backend. At first I was intimidated by this project. React and Redux, to me, are complicated frameworks to understand and work through. However with a good understanding of rails, I was able to get started and work through most obstacles that presented themselves.

I chose to build a blog post application that allows the user to create posts and comment on specific posts all within one Single Page Application. I knew I was going to need a rails API to make data fetch requests, so that is where I started. I was able to utilize the rails generators to help generate almost the entire file structure for the rails side of the App. Using the knowledge I gained . previously in the curriculum, I was able to get my controllers, models, routes, and serializers set up with ease. before moving on to the react and redux side of the app, I tested out the functionality of being able to build out posts and comments in the rails console and save that data so I could see if my soon the be built fetch requests were pulling in some data for testing purposes. After making sure the rails side of the application was working I was able to move on to the React/Redux side of the project. 

Thankfully Facebook proviuded developers with something similar to the rails generator and that is the `create-react-app app-name`. This was a useful command because it helped me set up the react side of the application. After getting the file structure set up, I was ready to move forward and start programming the Front end side of the application. After starting to work through the frontend of the application, I quickly realized the approach I was going to need to take get things moving in the application. One of the first things I did was set up some statless components that I would like my project to render. I chose to set up welcome, about, and navbar components in order to have some core functionality and start seeing things work in the broswer. I was then able to transition into working on the containers and making sure i was able to pass data between different components. 

Before I started working on any kin of form for data submission I wanted to make sure I would be able to pull/access data from the rails API. In order to test this I had to build a few components and started to work on making different types of fetch requests to get certain pieces of data that I had originally built in the rails console. This proved to be a challneging task but was fairly easy to resolve. After being able to render `json` data in the browser, I knew I was ready to start working on being able to build out a form for data submission from the frontend of the application. 

The form I needed to use for the post had 3 main attributes that I included in the rails models/serializers. They were title, author, and content. I knew I was going to need a form with event listeners to listen for changes in the input fields as well as the submission of the form. I knew when using a form I was going to need to use a fetch request to make sure the app was able to get the data from the post submission and be able to retrieve that data. Once I was able to grab the data I passed it into one of the ` components` I made in order to render that data properly on the right page. 

After making sure I had some of the core functionality I knew that this project was a SPA. This meant I was going to need to incorporate the `React router` to help users navigate to the different pages I built in the application. This required some further research in combination with a few study groups from the instructors at the Flatiron school. By the end I was able to submit data, pull that data stored in the API, displkay it on different view pages and ultimately give the user a clean experience when using the application.

This was by far the most challenging project of the whole curriculum for me personally. This not only tested my knowledge of React and Redux, but it also challneged me to incorporate most of the knowledge I learned leading up to the project as well. This project helped me gain a better understanding of how React/redux work in applications. 

Moving forward I plan to add additional features after graduation and the goal is to make this application a useful application for users who choose to make use of it. I am really looking forward to expanding my knowledge in react and redux and continuoing to work on this application, but also push myself to be the best programmer I can be. 
